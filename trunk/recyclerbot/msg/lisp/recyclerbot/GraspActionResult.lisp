; Auto-generated. Do not edit!


(in-package recyclerbot-msg)


;//! \htmlinclude GraspActionResult.msg.html

(defclass <GraspActionResult> (ros-message)
  ((header
    :reader header-val
    :initarg :header
    :type roslib-msg:<Header>
    :initform (make-instance 'roslib-msg:<Header>))
   (status
    :reader status-val
    :initarg :status
    :type actionlib_msgs-msg:<GoalStatus>
    :initform (make-instance 'actionlib_msgs-msg:<GoalStatus>))
   (result
    :reader result-val
    :initarg :result
    :type recyclerbot-msg:<GraspResult>
    :initform (make-instance 'recyclerbot-msg:<GraspResult>)))
)
(defmethod serialize ((msg <GraspActionResult>) ostream)
  "Serializes a message object of type '<GraspActionResult>"
  (serialize (slot-value msg 'header) ostream)
  (serialize (slot-value msg 'status) ostream)
  (serialize (slot-value msg 'result) ostream)
)
(defmethod deserialize ((msg <GraspActionResult>) istream)
  "Deserializes a message object of type '<GraspActionResult>"
  (deserialize (slot-value msg 'header) istream)
  (deserialize (slot-value msg 'status) istream)
  (deserialize (slot-value msg 'result) istream)
  msg
)
(defmethod ros-datatype ((msg (eql '<GraspActionResult>)))
  "Returns string type for a message object of type '<GraspActionResult>"
  "recyclerbot/GraspActionResult")
(defmethod md5sum ((type (eql '<GraspActionResult>)))
  "Returns md5sum for a message object of type '<GraspActionResult>"
  "02bc3021943f5f9d25eb990e85014117")
(defmethod message-definition ((type (eql '<GraspActionResult>)))
  "Returns full string definition for message of type '<GraspActionResult>"
  (format nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalStatus status~%GraspResult result~%~%================================================================================~%MSG: roslib/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.secs: seconds (stamp_secs) since epoch~%# * stamp.nsecs: nanoseconds since stamp_secs~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%# 0: no frame~%# 1: global frame~%string frame_id~%~%================================================================================~%MSG: actionlib_msgs/GoalStatus~%GoalID goal_id~%uint8 status~%uint8 PENDING         = 0   # The goal has yet to be processed by the action server~%uint8 ACTIVE          = 1   # The goal is currently being processed by the action server~%uint8 PREEMPTED       = 2   # The goal received a cancel request after it started executing~%                            #   and has since completed its execution (Terminal State)~%uint8 SUCCEEDED       = 3   # The goal was achieved successfully by the action server (Terminal State)~%uint8 ABORTED         = 4   # The goal was aborted during execution by the action server due~%                            #    to some failure (Terminal State)~%uint8 REJECTED        = 5   # The goal was rejected by the action server without being processed,~%                            #    because the goal was unattainable or invalid (Terminal State)~%uint8 PREEMPTING      = 6   # The goal received a cancel request after it started executing~%                            #    and has not yet completed execution~%uint8 RECALLING       = 7   # The goal received a cancel request before it started executing,~%                            #    but the action server has not yet confirmed that the goal is canceled~%uint8 RECALLED        = 8   # The goal received a cancel request before it started executing~%                            #    and was successfully cancelled (Terminal State)~%uint8 LOST            = 9   # An action client can determine that a goal is LOST. This should not be~%                            #    sent over the wire by an action server~%~%#Allow for the user to associate a string with GoalStatus for debugging~%string text~%~%~%================================================================================~%MSG: actionlib_msgs/GoalID~%# The stamp should store the time at which this goal was requested.~%# It is used by an action server when it tries to preempt all~%# goals that were requested before a certain time~%time stamp~%~%# The id provides a way to associate feedback and~%# result message with specific goal requests. The id~%# specified must be unique.~%string id~%~%~%================================================================================~%MSG: recyclerbot/GraspResult~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%# result definition~%geometry_msgs/Pose endPose~%~%================================================================================~%MSG: geometry_msgs/Pose~%# A representation of pose in free space, composed of postion and orientation. ~%Point position~%Quaternion orientation~%~%================================================================================~%MSG: geometry_msgs/Point~%# This contains the position of a point in free space~%float64 x~%float64 y~%float64 z~%~%================================================================================~%MSG: geometry_msgs/Quaternion~%# This represents an orientation in free space in quaternion form.~%~%float64 x~%float64 y~%float64 z~%float64 w~%~%~%"))
(defmethod serialization-length ((msg <GraspActionResult>))
  (+ 0
     (serialization-length (slot-value msg 'header))
     (serialization-length (slot-value msg 'status))
     (serialization-length (slot-value msg 'result))
))
(defmethod ros-message-to-list ((msg <GraspActionResult>))
  "Converts a ROS message object to a list"
  (list '<GraspActionResult>
    (cons ':header (header-val msg))
    (cons ':status (status-val msg))
    (cons ':result (result-val msg))
))
