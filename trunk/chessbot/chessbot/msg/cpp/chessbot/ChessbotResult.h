/* auto-generated by genmsg_cpp from /home/davidmandle/rospackages/chessbot/msg/ChessbotResult.msg.  Do not edit! */
#ifndef CHESSBOT_CHESSBOTRESULT_H
#define CHESSBOT_CHESSBOTRESULT_H

#include <string>
#include <vector>
#include "ros/message.h"
#include "ros/debug.h"
#include "ros/assert.h"
#include "ros/time.h"

namespace chessbot
{

//! \htmlinclude ChessbotResult.msg.html

class ChessbotResult : public ros::Message
{
public:
  typedef boost::shared_ptr<ChessbotResult> Ptr;
  typedef boost::shared_ptr<ChessbotResult const> ConstPtr;



  ChessbotResult() : ros::Message()
  {
  }
  ChessbotResult(const ChessbotResult &copy) : ros::Message()
  {
    (void)copy;
  }
  ChessbotResult &operator =(const ChessbotResult &copy)
  {
    if (this == &copy)
      return *this;
    return *this;
  }
  virtual ~ChessbotResult() 
  {
  }
  inline static std::string __s_getDataType() { return std::string("chessbot/ChessbotResult"); }
  inline static std::string __s_getMD5Sum() { return std::string("d41d8cd98f00b204e9800998ecf8427e"); }
  inline static std::string __s_getMessageDefinition()
  {
    return std::string(
    "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n"
    "#result definition\n"
    "\n"
    "\n"
    );
  }
  inline virtual const std::string __getDataType() const { return __s_getDataType(); }
  inline virtual const std::string __getMD5Sum() const { return __s_getMD5Sum(); }
  inline virtual const std::string __getMessageDefinition() const { return __s_getMessageDefinition(); }
  inline uint32_t serializationLength() const
  {
    unsigned __l = 0;
    return __l;
  }
  virtual uint8_t *serialize(uint8_t *write_ptr,
#if defined(__GNUC__)
                             __attribute__((unused)) uint32_t seq) const
#else
                             uint32_t seq) const
#endif
  {
    return write_ptr;
  }
  virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    return read_ptr;
  }
};

typedef boost::shared_ptr<ChessbotResult> ChessbotResultPtr;
typedef boost::shared_ptr<ChessbotResult const> ChessbotResultConstPtr;


}

#endif
