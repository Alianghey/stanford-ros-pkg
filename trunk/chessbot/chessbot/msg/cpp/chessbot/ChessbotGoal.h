/* auto-generated by genmsg_cpp from /home/davidmandle/rospackages/chessbot/msg/ChessbotGoal.msg.  Do not edit! */
#ifndef CHESSBOT_CHESSBOTGOAL_H
#define CHESSBOT_CHESSBOTGOAL_H

#include <string>
#include <vector>
#include "ros/message.h"
#include "ros/debug.h"
#include "ros/assert.h"
#include "ros/time.h"

namespace chessbot
{

//! \htmlinclude ChessbotGoal.msg.html

class ChessbotGoal : public ros::Message
{
public:
  typedef boost::shared_ptr<ChessbotGoal> Ptr;
  typedef boost::shared_ptr<ChessbotGoal const> ConstPtr;

  typedef int8_t _origin_row_type;
  typedef int8_t _origin_col_type;
  typedef int8_t _destination_row_type;
  typedef int8_t _destination_col_type;
  typedef uint8_t _capture_type;

  int8_t origin_row;
  int8_t origin_col;
  int8_t destination_row;
  int8_t destination_col;
  uint8_t capture;

  ChessbotGoal() : ros::Message(),
    origin_row(0),
    origin_col(0),
    destination_row(0),
    destination_col(0),
    capture(0)
  {
  }
  ChessbotGoal(const ChessbotGoal &copy) : ros::Message(),
    origin_row(copy.origin_row),
    origin_col(copy.origin_col),
    destination_row(copy.destination_row),
    destination_col(copy.destination_col),
    capture(copy.capture)
  {
    (void)copy;
  }
  ChessbotGoal &operator =(const ChessbotGoal &copy)
  {
    if (this == &copy)
      return *this;
    origin_row = copy.origin_row;
    origin_col = copy.origin_col;
    destination_row = copy.destination_row;
    destination_col = copy.destination_col;
    capture = copy.capture;
    return *this;
  }
  virtual ~ChessbotGoal() 
  {
  }
  inline static std::string __s_getDataType() { return std::string("chessbot/ChessbotGoal"); }
  inline static std::string __s_getMD5Sum() { return std::string("a89dc6763697b95e76194f808753f94e"); }
  inline static std::string __s_getMessageDefinition()
  {
    return std::string(
    "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n"
    "#goal definition\n"
    "int8 origin_row\n"
    "int8 origin_col\n"
    "int8 destination_row\n"
    "int8 destination_col\n"
    "bool capture\n"
    "\n"
    "\n"
    "\n"
    );
  }
  inline virtual const std::string __getDataType() const { return __s_getDataType(); }
  inline virtual const std::string __getMD5Sum() const { return __s_getMD5Sum(); }
  inline virtual const std::string __getMessageDefinition() const { return __s_getMessageDefinition(); }
  inline uint32_t serializationLength() const
  {
    unsigned __l = 0;
    __l += 1; // origin_row
    __l += 1; // origin_col
    __l += 1; // destination_row
    __l += 1; // destination_col
    __l += 1; // capture
    return __l;
  }
  virtual uint8_t *serialize(uint8_t *write_ptr,
#if defined(__GNUC__)
                             __attribute__((unused)) uint32_t seq) const
#else
                             uint32_t seq) const
#endif
  {
    SROS_SERIALIZE_PRIMITIVE(write_ptr, origin_row);
    SROS_SERIALIZE_PRIMITIVE(write_ptr, origin_col);
    SROS_SERIALIZE_PRIMITIVE(write_ptr, destination_row);
    SROS_SERIALIZE_PRIMITIVE(write_ptr, destination_col);
    SROS_SERIALIZE_PRIMITIVE(write_ptr, capture);
    return write_ptr;
  }
  virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, origin_row);
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, origin_col);
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, destination_row);
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, destination_col);
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, capture);
    return read_ptr;
  }
};

typedef boost::shared_ptr<ChessbotGoal> ChessbotGoalPtr;
typedef boost::shared_ptr<ChessbotGoal const> ChessbotGoalConstPtr;


}

#endif
