; Auto-generated. Do not edit!


(in-package recyclerbot-msg)


;//! \htmlinclude GraspResult.msg.html

(defclass <GraspResult> (ros-message)
  ((endPose
    :reader endPose-val
    :initarg :endPose
    :type geometry_msgs-msg:<Pose>
    :initform (make-instance 'geometry_msgs-msg:<Pose>)))
)
(defmethod serialize ((msg <GraspResult>) ostream)
  "Serializes a message object of type '<GraspResult>"
  (serialize (slot-value msg 'endPose) ostream)
)
(defmethod deserialize ((msg <GraspResult>) istream)
  "Deserializes a message object of type '<GraspResult>"
  (deserialize (slot-value msg 'endPose) istream)
  msg
)
(defmethod ros-datatype ((msg (eql '<GraspResult>)))
  "Returns string type for a message object of type '<GraspResult>"
  "recyclerbot/GraspResult")
(defmethod md5sum ((type (eql '<GraspResult>)))
  "Returns md5sum for a message object of type '<GraspResult>"
  "20671df6c9fbc03e56a24c5f4c671635")
(defmethod message-definition ((type (eql '<GraspResult>)))
  "Returns full string definition for message of type '<GraspResult>"
  (format nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%# result definition~%geometry_msgs/Pose endPose~%~%================================================================================~%MSG: geometry_msgs/Pose~%# A representation of pose in free space, composed of postion and orientation. ~%Point position~%Quaternion orientation~%~%================================================================================~%MSG: geometry_msgs/Point~%# This contains the position of a point in free space~%float64 x~%float64 y~%float64 z~%~%================================================================================~%MSG: geometry_msgs/Quaternion~%# This represents an orientation in free space in quaternion form.~%~%float64 x~%float64 y~%float64 z~%float64 w~%~%~%"))
(defmethod serialization-length ((msg <GraspResult>))
  (+ 0
     (serialization-length (slot-value msg 'endPose))
))
(defmethod ros-message-to-list ((msg <GraspResult>))
  "Converts a ROS message object to a list"
  (list '<GraspResult>
    (cons ':endPose (endPose-val msg))
))
