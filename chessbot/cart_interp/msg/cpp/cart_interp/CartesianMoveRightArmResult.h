/* auto-generated by genmsg_cpp from /home/davidmandle/rospackages/cart_interp/msg/CartesianMoveRightArmResult.msg.  Do not edit! */
#ifndef CART_INTERP_CARTESIANMOVERIGHTARMRESULT_H
#define CART_INTERP_CARTESIANMOVERIGHTARMRESULT_H

#include <string>
#include <vector>
#include "ros/message.h"
#include "ros/debug.h"
#include "ros/assert.h"
#include "ros/time.h"

#include "geometry_msgs/Point.h"
#include "geometry_msgs/Quaternion.h"
#include "geometry_msgs/Pose.h"

namespace cart_interp
{

//! \htmlinclude CartesianMoveRightArmResult.msg.html

class CartesianMoveRightArmResult : public ros::Message
{
public:
  typedef boost::shared_ptr<CartesianMoveRightArmResult> Ptr;
  typedef boost::shared_ptr<CartesianMoveRightArmResult const> ConstPtr;

  typedef geometry_msgs::Pose _endpoint_type;

  geometry_msgs::Pose endpoint;

  CartesianMoveRightArmResult() : ros::Message()
  {
  }
  CartesianMoveRightArmResult(const CartesianMoveRightArmResult &copy) : ros::Message(),
    endpoint(copy.endpoint)
  {
    (void)copy;
  }
  CartesianMoveRightArmResult &operator =(const CartesianMoveRightArmResult &copy)
  {
    if (this == &copy)
      return *this;
    endpoint = copy.endpoint;
    return *this;
  }
  virtual ~CartesianMoveRightArmResult() 
  {
  }
  inline static std::string __s_getDataType() { return std::string("cart_interp/CartesianMoveRightArmResult"); }
  inline static std::string __s_getMD5Sum() { return std::string("1bbbe0b2099de4e34a85feb89694be87"); }
  inline static std::string __s_getMessageDefinition()
  {
    return std::string(
    "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n"
    "# result definition\n"
    "geometry_msgs/Pose endpoint\n"
    "\n"
    "================================================================================\n"
    "MSG: geometry_msgs/Pose\n"
    "# A representation of pose in free space, composed of postion and orientation. \n"
    "Point position\n"
    "Quaternion orientation\n"
    "\n"
    "================================================================================\n"
    "MSG: geometry_msgs/Point\n"
    "# This contains the position of a point in free space\n"
    "float64 x\n"
    "float64 y\n"
    "float64 z\n"
    "\n"
    "================================================================================\n"
    "MSG: geometry_msgs/Quaternion\n"
    "# This represents an orientation in free space in quaternion form.\n"
    "\n"
    "float64 x\n"
    "float64 y\n"
    "float64 z\n"
    "float64 w\n"
    "\n"
    "\n"
    );
  }
  inline virtual const std::string __getDataType() const { return __s_getDataType(); }
  inline virtual const std::string __getMD5Sum() const { return __s_getMD5Sum(); }
  inline virtual const std::string __getMessageDefinition() const { return __s_getMessageDefinition(); }
  inline uint32_t serializationLength() const
  {
    unsigned __l = 0;
    __l += endpoint.serializationLength(); // endpoint
    return __l;
  }
  virtual uint8_t *serialize(uint8_t *write_ptr,
#if defined(__GNUC__)
                             __attribute__((unused)) uint32_t seq) const
#else
                             uint32_t seq) const
#endif
  {
    write_ptr = endpoint.serialize(write_ptr, seq);
    return write_ptr;
  }
  virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    read_ptr = endpoint.deserialize(read_ptr);
    return read_ptr;
  }
};

typedef boost::shared_ptr<CartesianMoveRightArmResult> CartesianMoveRightArmResultPtr;
typedef boost::shared_ptr<CartesianMoveRightArmResult const> CartesianMoveRightArmResultConstPtr;


}

#endif
